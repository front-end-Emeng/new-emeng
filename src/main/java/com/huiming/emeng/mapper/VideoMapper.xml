<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huiming.emeng.mapper.VideoMapper">
  <resultMap id="BaseResultMap" type="com.huiming.emeng.model.Video">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="lesson" jdbcType="INTEGER" property="lesson" />
    <result column="chapter" jdbcType="INTEGER" property="chapter" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, pic, link, lesson, chapter
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from video
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectBylesson" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select 
  <include refid="Base_Column_List" />
  from video
  where lesson=#{lesson,jdbcType=INTEGER}
  </select>
    <select id="selectBychapter" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select 
  <include refid="Base_Column_List" />
  from video
  where chapter=#{chapter,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from video
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huiming.emeng.model.Video">
    insert into video (id, name, pic, 
      link, lesson, chapter
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{link,jdbcType=VARCHAR}, #{lesson,jdbcType=INTEGER}, #{chapter,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.huiming.emeng.model.Video">
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="lesson != null">
        lesson,
      </if>
      <if test="chapter != null">
        chapter,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="lesson != null">
        #{lesson,jdbcType=INTEGER},
      </if>
      <if test="chapter != null">
        #{chapter,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huiming.emeng.model.Video">
    update video
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="lesson != null">
        lesson = #{lesson,jdbcType=INTEGER},
      </if>
      <if test="chapter != null">
        chapter = #{chapter,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huiming.emeng.model.Video">
    update video
    set name = #{name,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      lesson = #{lesson,jdbcType=INTEGER},
      chapter = #{chapter,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findVideo" parameterType="Map" resultMap="BaseResultMap">
      select * from video where name like #(name,jdbcType=VARCHAR)
  </select>
  
  <select id="selectNumberfromVideo" resultType="Integer">
     select count(*) from video
  </select>
  <select id="selectVideoWithPagesizeFromFromindex" resultMap="BaseResultMap">
  
  select * from video order by id desc limit #{fromIndex},#{pageSize}
   <!-- 
   select 
   <include refid="Base_Column_List" />
   from video
   <if test="fromIndex != null and pageSize != null">
        limit #{fromIndex},#{pageSize} 
    </if>  
    -->  
  </select>
  
</mapper>