<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huiming.emeng.mapper.SchoolMapper">
	<resultMap id="BaseResultMap" type="com.huiming.emeng.model.School">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="link" jdbcType="VARCHAR" property="link" />
		<result column="type" jdbcType="TINYINT" property="type" />
		<result column="pic" jdbcType="VARCHAR" property="pic" />
		<result column="province_id" jdbcType="INTEGER" property="provinceId" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, link, type, pic, province_id
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from school
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from school
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.huiming.emeng.model.School">
		insert into school (id, name,
		link,
		type, pic, province_id
		)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{link,jdbcType=VARCHAR},
		#{type,jdbcType=TINYINT}, #{pic,jdbcType=VARCHAR},
		#{provinceId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.huiming.emeng.model.School">
		insert into school
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="link != null">
				link,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="pic != null">
				pic,
			</if>
			<if test="provinceId != null">
				province_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="link != null">
				#{link,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=TINYINT},
			</if>
			<if test="pic != null">
				#{pic,jdbcType=VARCHAR},
			</if>
			<if test="provinceId != null">
				#{provinceId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.huiming.emeng.model.School">
		update school
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="link != null">
				link = #{link,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=TINYINT},
			</if>
			<if test="pic != null">
				pic = #{pic,jdbcType=VARCHAR},
			</if>
			<if test="provinceId != null">
				province_id = #{provinceId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.huiming.emeng.model.School">
		update school
		set
		name = #{name,jdbcType=VARCHAR},
		link = #{link,jdbcType=VARCHAR},
		type =
		#{type,jdbcType=TINYINT},
		pic = #{pic,jdbcType=VARCHAR},
		province_id =
		#{provinceId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from school
	</select>
	<select id="selectCount" resultType="java.lang.Integer">
		select count(*)
		from school
	</select>
	<select id="selectAllByPage" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from school
		limit #{fromIndex},#{pageSize}
	</select>
	<select id="selectByProvince" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from school
		where province_id = #{provinceId,jdbcType=INTEGER}
	</select>
	<select id="selectSchoolsByType" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from school s
		where s.type = #{type,jdbcType=INTEGER}
	</select>
	
	<select id="selectSchoolsByTypeAndProvinceId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from school s
		where s.type = #{type,jdbcType=INTEGER}
		and s.province_id  = #{provinceId,jdbcType=INTEGER}
	</select>
</mapper>