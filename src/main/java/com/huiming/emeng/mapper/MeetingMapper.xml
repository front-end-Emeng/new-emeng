<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huiming.emeng.mapper.MeetingMapper">
  <resultMap id="BaseResultMap" type="com.huiming.emeng.model.Meeting">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" /> 
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="release_date" jdbcType="DATE" property="releaseDate" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="annex" jdbcType="VARCHAR" property="annex" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.huiming.emeng.model.Meeting">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, link, type, release_date, code, annex ,content
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from meeting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from meeting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huiming.emeng.model.Meeting">
    insert into meeting (id, title, link, 
      type, release_date, code, annex, 
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, 
      #{type,jdbcType=BIT}, #{releaseDate,jdbcType=DATE}, #{code,jdbcType=VARCHAR}, #{annex,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huiming.emeng.model.Meeting">
    insert into meeting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="releaseDate != null">
        release_date,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="annex != null">
        annex,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=DATE},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="annex != null">
        #{annex,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huiming.emeng.model.Meeting">
    update meeting
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="releaseDate != null">
        release_date = #{releaseDate,jdbcType=DATE},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="annex != null">
        annex = #{annex,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.huiming.emeng.model.Meeting">
    update meeting
    set title = #{title,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      release_date = #{releaseDate,jdbcType=DATE},
      code = #{code,jdbcType=VARCHAR},
      annex = #{annex,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huiming.emeng.model.Meeting">
    update meeting
    set title = #{title,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      release_date = #{releaseDate,jdbcType=DATE},
      code = #{code,jdbcType=VARCHAR},
      annex = #{annex,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findMeeting" parameterType="Map" resultMap="ResultMapWithBLOBs">
       select * from meeting where title like #{title}
  </select>
  
  <select id="selectAllMeeting" resultMap="ResultMapWithBLOBs">
   select * from meeting
  </select>
  
    <select id="selectNumberfromMeeting" resultType="Integer">
   select count(*) from meeting
  </select>
  
  <select id="selectMeetingWithPagesizeFromFromindex" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    from meeting order by id DESC 
    <if test="fromIndex != null and pageSize != null">
        limit #{fromIndex},#{pageSize}
    </if>

  </select>
  
</mapper>